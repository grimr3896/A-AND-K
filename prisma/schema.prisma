// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id                Int                 @id @default(autoincrement())
  sku               String              @unique
  name              String
  standardPrice     Decimal             @map("standard_price")
  minimumPrice      Decimal             @map("minimum_price")
  stockQuantity     Int                 @map("stock_quantity")
  description       String?
  imageUrl          String?             @map("image_url")
  supplier          String?
  category          String?
  transactionItems  TransactionItem[]
  priceOverrideLogs PriceOverrideLog[]
}

model Customer {
  id                 Int                  @id @default(autoincrement())
  name               String
  phoneNumber        String?              @map("phone_number")
  transactions       Transaction[]
  layawayAgreements  LayawayAgreement[]
}

model Transaction {
  id               Int               @id @default(autoincrement())
  customerId       Int               @map("customer_id")
  dateTime         DateTime          @default(now()) @map("date_time")
  totalAmount      Decimal           @map("total_amount")
  paymentMethod    String            @map("payment_method")
  customer         Customer          @relation(fields: [customerId], references: [id])
  transactionItems TransactionItem[]
  priceOverrideLog PriceOverrideLog?
}

model TransactionItem {
  id            Int         @id @default(autoincrement())
  transactionId Int         @map("transaction_id")
  productId     Int         @map("product_id")
  priceSold     Decimal     @map("price_sold")
  quantity      Int
  transaction   Transaction @relation(fields: [transactionId], references: [id])
  product       Product     @relation(fields: [productId], references: [id])
}

model LayawayAgreement {
  id              Int              @id @default(autoincrement())
  customerId      Int              @map("customer_id")
  status          String
  totalAmount     Decimal          @map("total_amount")
  customer        Customer         @relation(fields: [customerId], references: [id])
  layawayPayments LayawayPayment[]
}

model LayawayPayment {
  id               Int              @id @default(autoincrement())
  agreementId      Int              @map("agreement_id")
  dateTime         DateTime         @default(now()) @map("date_time")
  amount           Decimal
  paymentMethod    String           @map("payment_method")
  layawayAgreement LayawayAgreement @relation(fields: [agreementId], references: [id])
}

model User {
  id                Int                @id @default(autoincrement())
  username          String             @unique
  role              String
  priceOverrideLogs PriceOverrideLog[]
}

model PriceOverrideLog {
  id             Int         @id @default(autoincrement())
  productId      Int         @map("product_id")
  userId         Int         @map("user_id")
  transactionId  Int         @unique @map("transaction_id")
  originalPrice  Decimal     @map("original_price")
  newPrice       Decimal     @map("new_price")
  reason         String
  product        Product     @relation(fields: [productId], references: [id])
  user           User        @relation(fields: [userId], references: [id])
  transaction    Transaction @relation(fields: [transactionId], references: [id])
}

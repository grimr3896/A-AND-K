generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id                String  @id @default(cuid())
  name              String
  sku               String? @unique
  category          String
  stock             Int
  price             Float
  lowStockThreshold Int
  cost              Float
  minPrice          Float
  supplier          String?
  description       String?
  imageUrl          String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  saleItems         SaleItem[]
}

model Sale {
  id            String    @id @default(cuid())
  customerName  String
  total         Float
  paymentMethod String
  createdAt     DateTime  @default(now())
  items         SaleItem[]
}

model SaleItem {
  id        String  @id @default(cuid())
  saleId    String
  productId String
  name      String
  quantity  Int
  price     Float
  sale      Sale    @relation(fields: [saleId], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id], onDelete: Restrict)
}

model Layaway {
  id              String    @id @default(cuid())
  customerName    String
  productName     String
  totalAmount     Float
  amountPaid      Float
  status          String // e.g., "Pending", "Paid", "Cancelled"
  lastPaymentDate DateTime
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  payments        Payment[]
}

model Payment {
  id        String   @id @default(cuid())
  layawayId String
  amount    Float
  method    String
  date      DateTime @default(now())
  layaway   Layaway  @relation(fields: [layawayId], references: [id], onDelete: Cascade)
}

model AuditLog {
  id        String   @id @default(cuid())
  user      String
  action    String
  details   String
  createdAt DateTime @default(now())
}
